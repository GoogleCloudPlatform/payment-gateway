// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.cloud.paymentgateway.issuerswitch.bankadapter.v1;

import "cloud/api_products/payment_gateway/upi_india/bank_adapter/spec/issuer/v1/account_types.proto";
import "cloud/api_products/payment_gateway/upi_india/bank_adapter/spec/issuer/v1/customer_types.proto";
import "cloud/api_products/payment_gateway/upi_india/bank_adapter/spec/issuer/v1/payment_settlement_types.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

option java_outer_classname = "IssuerBankAdapterServiceProto";
option java_multiple_files = true;
option java_package = "com.google.cloud.paymentgateway.issuerswitch.bankadapter.v1";
option go_api_flag = "OPAQUE_V0";

// A service interface for Bank Adapter.
service BankAdapterService {
  // Search and return a list of accounts associated with a given customer. The
  // customer may be identified in one of many ways (mobile number, email,
  // unique national id, payment address, etc. For UPI, the supported customer
  // identifiers are Mobile number and Aadhaar number. This API returns one or
  // more accounts associated with the specified customer identifier.
  //
  // This API should return a `400` HTTP status code if it is unable to process
  // the request. The `reason` field in the
  // [ErrorInfo](https://cloud.google.com/apis/design/errors#error_info)
  // response should contain one of the following values:
  //
  // * `ACCT_BLOCKED` = Account linked with customer identifier is blocked
  //
  // * `ACCT_DORMANT` = Account linked with customer identifier is dormant
  //
  // * `ACCT_FROZEN` = Account linked with customer identifier is frozen
  //
  // * `ACCT_INACTIVE` = Account linked with customer identifier is inactive
  //
  // * `ACCT_NOT_FOUND` = No account(s) were found in the bank's systems linked
  // with the customer identifier
  //
  // * `ACCT_MULTIPLE_CUSTOMERS` = Indicates that the account is associated
  // with multiple customers
  //
  // * `MOBILE_NUMBER_MULTIPLE_CUSTOMERS` = Indicates that the same mobile
  // number is associated with multiple customers in the bank's systems
  //
  // _Note:_ This API will be invoked in the UPI `ReqListAccount` API flow.
  rpc SearchAccounts(SearchAccountsRequest) returns (SearchAccountsResponse) {
    option (google.api.http) = {
      post: "/v1/accounts:search"
      body: "*"
    };
  }

  // Retrieves the account balance information for the specified account.
  //
  // This API should return a `400` HTTP status code if it is unable to process
  // the request. The `reason` field in the
  // [ErrorInfo](https://cloud.google.com/apis/design/errors#error_info)
  // response should contain one of the following values:
  //
  // * `ACCT_BLOCKED` = Account is blocked
  //
  // * `ACCT_DORMANT` = Account is dormant
  //
  // * `ACCT_FROZEN` = Account is frozen
  //
  // * `ACCT_INACTIVE` = Account is inactive
  //
  // * `ACCT_NOT_FOUND` = Account not found in the bank's systems
  //
  // _Note:_ This API will be invoked in the UPI `ReqBalEnq` API flow.
  rpc RetrieveBalance(RetrieveBalanceRequest)
      returns (RetrieveBalanceResponse) {
    option (google.api.http) = {
      post: "/v1/accounts/balance:retrieve"
      body: "*"
    };
  }

  // Hold funds in the specified account.
  //
  // This API should return a `400` HTTP status code if it is unable to process
  // the request. The `reason` field in the
  // [ErrorInfo](https://cloud.google.com/apis/design/errors#error_info)
  // response should contain one of the following values:
  //
  // * `ACCT_BLOCKED` = Account is blocked
  //
  // * `ACCT_DORMANT` = Account is dormant
  //
  // * `ACCT_FROZEN` = Account is frozen
  //
  // * `ACCT_INACTIVE` = Account is inactive
  //
  // * `ACCT_NOT_FOUND` = Account not found in the bank's systems
  //
  // * `INSUFFICIENT_FUNDS` = Insufficient funds in account to process request
  //
  // * `INVALID_TRANSACTION` = Invalid transaction
  //
  // * `TRANSACTION_NOT_PERMITTED` = Requested transaction is not permitted for
  // account
  //
  // _Note:_ This API will be invoked in the UPI `ReqMandate` API flow.
  rpc HoldFunds(HoldFundsRequest) returns (HoldFundsResponse) {
    option (google.api.http) = {
      post: "/v1/accounts/funds:hold"
      body: "*"
    };
  }

  // Release funds previously held in the specified account.
  //
  // This API should return a `400` HTTP status code if it is unable to process
  // the request. The `reason` field in the
  // [ErrorInfo](https://cloud.google.com/apis/design/errors#error_info)
  // response should contain one of the following values:
  //
  // * `ACCT_BLOCKED` = Account is blocked
  //
  // * `ACCT_DORMANT` = Account is dormant
  //
  // * `ACCT_FROZEN` = Account is frozen
  //
  // * `ACCT_INACTIVE` = Account is inactive
  //
  // * `ACCT_NOT_FOUND` = Account not found in the bank's systems
  //
  // * `INSUFFICIENT_FUNDS` = Insufficient funds in account to process request
  //
  // * `INVALID_TRANSACTION` = Invalid transaction
  //
  // * `TRANSACTION_NOT_PERMITTED` = Requested transaction is not permitted for
  // account
  //
  // _Note:_ This API will be invoked in the UPI `ReqMandate` API flow.
  rpc ReleaseFunds(ReleaseFundsRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/accounts/funds:release"
      body: "*"
    };
  }

  // Request issued by the payment gateway for the bank to execute a single
  // payment settlement operation. The operation is either to debit a payer's
  // account or to credit a payee's account.
  //
  // This API should return a `400` HTTP status code if it is unable to process
  // the request. The `reason` field in the
  // [ErrorInfo](https://cloud.google.com/apis/design/errors#error_info)
  // response should contain one of the following values:
  //
  // * `ACCT_BLOCKED` = Indicates that the payer account is blocked, if the
  // settlement request is for a _debit_ or that the payee account is blocked,
  // if the settlement request is for a _credit_
  //
  // * `ACCT_DORMANT` = Indicates that the payer account is dormant, if the
  // settlement request is for a _debit_ or that the payee account is dormant,
  // if the settlement request is for a _credit_
  //
  // * `ACCT_FROZEN` = Indicates that the payer account is frozen, if the
  // settlement request is for a _debit_ or that the payee account is frozen,
  // if the settlement request is for a _credit_
  //
  // * `ACCT_INACTIVE` = Indicates that the payer account is inactive, if the
  // settlement request is for a _debit_ or that the payee account is inactive,
  // if the settlement request is for a _credit_
  //
  // * `ACCT_NOT_FOUND` = Indicates that the payer account is not found, if the
  // settlement request is for a _debit_ or that the payee account is not found,
  // if the settlement request is for a _credit_
  //
  // * `INSUFFICIENT_FUNDS` = Returned if the settlement type is _debit_ and the
  // payer's account does not have sufficient funds for the instructed amount
  //
  // * `INVALID_TRANSACTION` = Requested settlement cannot be performed
  //
  // * `MAX_BALANCE_EXCEEDED` = Returned if the settlement type is `credit` and
  // the payee's account's maximum balance allowed value will be breached with
  // the instructed amount
  //
  // _Note:_ This API will be invoked in the UPI `ReqPay` API flow.
  rpc SettlePayment(SettlePaymentRequest) returns (SettlePaymentResponse) {
    option (google.api.http) = {
      post: "/v1/payments:settleSingle"
      body: "*"
    };
  }

  // Returns information about a specific payment. The payment to search
  // can be specified using various filter criteria. The request will contain
  // all the values that could be used to search for the payment settlement.
  //
  // If no matching payments are found, then this API must return a HTTP status
  // of 200 with an empty list of payments in the response.
  //
  // _Note:_ This API will be invoked in the UPI `ReqChkTxn` API flow.
  rpc SearchPayments(SearchPaymentsRequest) returns (SearchPaymentsResponse) {
    option (google.api.http) = {
      post: "/v1/payments:search"
      body: "*"
    };
  }

  // Initiates the registration of a customer's bank account with UPI on the
  // issuer bank. Either a customer reference (such as a resident id, like
  // Aadhaar or a mobile phone number) must be specified, or a bank account
  // reference must be provided.
  //
  // It is expected that the bank adapter service will trigger an SMS OTP to be
  // sent to the customer's mobile phone.
  //
  // This API should return a `400` HTTP status code if it is unable to process
  // the request. The `reason` field in the
  // [ErrorInfo](https://cloud.google.com/apis/design/errors#error_info)
  // response should contain one of the following values:
  //
  // * `ACCT_BLOCKED` = Account is blocked
  //
  // * `ACCT_DORMANT` = Account is dormant
  //
  // * `ACCT_FROZEN` = Account is frozen
  //
  // * `ACCT_INACTIVE` = Account is inactive
  //
  // * `ACCT_NOT_FOUND` = Account not found in the bank's systems
  //
  // * `INVALID_DEBIT_CARD` = Debit card details provided are invalid
  //
  // * `MOBILE_NUMBER_MULTIPLE_CUSTOMERS` = Mobile number is linked with
  // multiple customers
  //
  // _Note:_ This API will be invoked in the UPI `ReqOtp` API flow.
  rpc InitiateRegistration(InitiateRegistrationRequest)
      returns (InitiateRegistrationResponse) {
    option (google.api.http) = {
      post: "/v1/users:initiateRegistration"
      body: "*"
    };
  }

  // Validates a previously initiated registration request for a customer's bank
  // account with UPI on the issuer bank. Either a customer reference (such as a
  // resident id, like Aadhaar or a mobile phone number) must be specified, or a
  // bank account reference must be provided.
  //
  // The following security details must be validated by the bank adapter
  // service with the bank's backend systems:
  //
  // 1. Debit card details
  // 2. ATM PIN
  // 3. SMS OTP
  //
  // This API should return a `400` HTTP status code if it is unable to process
  // the request. The `reason` field in the
  // [ErrorInfo](https://cloud.google.com/apis/design/errors#error_info)
  // response should contain one of the following values:
  //
  // * `ACCT_BLOCKED` = Account is blocked
  //
  // * `ACCT_DORMANT` = Account is dormant
  //
  // * `ACCT_FROZEN` = Account is frozen
  //
  // * `ACCT_INACTIVE` = Account is inactive
  //
  // * `ACCT_NOT_FOUND` = Account not found in the bank's systems
  //
  // * `CARD_MANAGEMENT_SYSTEM_FAILURE` = Bank card management system is down
  //
  // * `INACTIVE_DEBIT_CARD` = Debit card is inactive
  //
  // * `INCORRECT_ATM_PIN` = Incorrect ATM pin
  //
  // * `INCORRECT_OTP` = OTP provided is incorrect
  //
  // * `INVALID_DEBIT_CARD` = Debit card details provided are invalid
  //
  // * `MOBILE_NUMBER_MULTIPLE_CUSTOMERS` = Mobile number is linked with
  // multiple customers
  //
  // * `OTP_EXPIRED` = Specified OTP has expired
  //
  // * `RESTRICTED_DEBIT_CARD` = Debit card is restricted
  //
  // _Note:_ This API will be invoked in the UPI `ReqRegMob` API flow.
  rpc ValidateRegistration(ValidateRegistrationRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/users:validateRegistration"
      body: "*"
    };
  }

  // This is an API to notify the bank adapter about the successful updation of
  // a user's MPIN in the Google Cloud Payment Gateway issuer switch.
  //
  // The validation of the current M-PIN of a user, and the updation to a new
  // M-PIN is handled by the Google Cloud Payment Gateway issuer switch. The
  // bank adapter is invoked after the new M-PIN has been updated successfully
  // by the issuer switch for any further processing by the bank's systems.
  //
  // The NPCI circular RMD-014 requires issuer banks to send an SMS notification
  // to customers when the UPI M-PIN is successfully set for a user. This is to
  // make the user aware of any fradulent attempts to modify the user's M-PIN.
  // This SMS notification could be one of the possible actions taken when this
  // API is invoked on the Bank Adapter.
  //
  // This API should return a `400` HTTP status code if it is unable to process
  // the request. The `reason` field in the
  // [ErrorInfo](https://cloud.google.com/apis/design/errors#error_info)
  // response should contain one of the following values:
  //
  // * `ACCT_BLOCKED` = Account is blocked
  //
  // * `ACCT_DORMANT` = Account is dormant
  //
  // * `ACCT_FROZEN` = Account is frozen
  //
  // * `ACCT_INACTIVE` = Account is inactive
  //
  // * `ACCT_NOT_FOUND` = Account not found in the bank's systems
  //
  // _Note:_ This API will be invoked in the UPI `ReqSetCre` API flow.
  rpc NotifyMPINUpdated(NotifyMPINUpdatedRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/users:notifyMPINUpdated"
      body: "*"
    };
  }
}
