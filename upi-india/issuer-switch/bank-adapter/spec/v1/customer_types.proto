// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.cloud.paymentgateway.issuerswitch.bankadapter.v1;

import "cloud/api_products/payment_gateway/upi_india/bank_adapter/spec/issuer/v1/common_types.proto";

option java_outer_classname = "CustomerTypesProto";
option java_multiple_files = true;
option java_package = "com.google.cloud.paymentgateway.issuerswitch.bankadapter.v1";
option go_api_flag = "OPAQUE_V0";

// Information about a customer's debit card that will be validated by the bank
// before sending an OTP to the customer's mobile phone or for validating an OTP
// received by the customer.
message DebitCardInfo {
  // The last 6 digits of the customer's debit card.
  string card_number = 1;
  // The expiry date of the debit card in MMYY format.
  string expiry = 2;
}

// Details around customer's government issued ID that needs to validated.
message CustomerValidationId {
  // Supported ID types.
  enum IdType {
    // Unspecified ID type.
    ID_TYPE_UNSPECIFIED = 0;
    // Permanent Account Number,
    // an alphanumeric ID issued by the Income Tax Department.
    PAN = 1;
    // A 12 digit ID number, issued by Unique Identification Authority of India.
    AADHAAR = 2;
    // An alphanumeric ID issued by Election Commission of India.
    VOTER_ID = 3;
    // An alphanumeric ID issued by Regional Transport Offices in India.
    DRIVING_LICENSE = 4;
  }
  // The type of the ID that needs to be validated.
  IdType id_type = 1;
  // The value of the ID that needs to be validated.
  string value = 2;
}

// Request body for customer notification.
message NotifyCustomerRequest {
  // Details of the MPIN update operation.
  message MPINUpdated {
    // Possible states of the MPIN update operation.
    enum State {
      // Unspecified state.
      STATE_UNSPECIFIED = 0;
      // MPIN update succeeded.
      STATE_SUCCEEDED = 1;
      // MPIN update failed.
      STATE_FAILED = 2;
    }
    // State of the MPIN update operation.
    State state = 1;
  }
  // Details of the recurring mandate execution.
  message RecurringMandateExecution {
    // Recurrence pattern of the mandate.
    enum RecurrencePattern {
      // Unspecified recurrence pattern.
      RECURRENCE_PATTERN_UNSPECIFIED = 0;
      // Mandate recurring daily.
      RECURRENCE_PATTERN_DAILY = 1;
      // Mandate recurring weekly.
      RECURRENCE_PATTERN_WEEKLY = 2;
      // Mandate recurring fortnightly.
      RECURRENCE_PATTERN_FORTNIGHTLY = 3;
      // Mandate recurring monthly.
      RECURRENCE_PATTERN_MONTHLY = 4;
      // Mandate recurring bi-monthly (once every 2 months).
      RECURRENCE_PATTERN_BIMONTHLY = 5;
      // Mandate recurring quarterly.
      RECURRENCE_PATTERN_QUARTERLY = 6;
      // Mandate recurring half yearly.
      RECURRENCE_PATTERN_HALFYEARLY = 7;
      // Mandate recurring yearly.
      RECURRENCE_PATTERN_YEARLY = 8;
    }
    // Identifier of the mandate. This maps to the `Unique Mandate Number (UMN)
    // in India's UPI standards.
    string mandate_id = 1;
    // Information about the merchant who will execute the mandate.
    MerchantInfo merchant_info = 2;
    // The mandate's recurrence pattern.
    RecurrencePattern recurrence_pattern = 3;
    // The amount that will be settled as part of the mandate execution.
    Amount amount = 4;
  }
  // Participant to be notified.
  Participant participant = 1;
  // Unique identification of an account according to India's UPI standards.
  // This is the details of the account of the customer who is to be notified.
  AccountReference account = 2;
  // The details of the notification. Only one of two values will be specified.
  // The type of notification to be sent can be inferred from which of the two
  // possible values are set in the request.
  oneof details {
    // Details of the MPIN operation processed by the issuer switch.
    MPINUpdated mpin_updated = 4;
    // Details of the upcoming recurring mandate execution.
    RecurringMandateExecution recurring_mandate_execution = 5;
  }
}

// The response once a registration request has been processed and an OTP has
// been generated and sent to a customer's mobile phone.
message InitiateRegistrationResponse {
  // URL the customer should use to enter the OTP received on their mobile.
  string validation_page_link = 1;
}

// Request for initiating registration of a customer's bank account for UPI.
message InitiateRegistrationRequest {
  // Identifies the customer or bank account registering for UPI. An OTP is sent
  // to the mobile number associated with the customer/bank account. Either a
  // customer reference or a bank account reference will be provided. Only one
  // of the two will be specified.
  oneof reference {
    // The combination of a reference type and reference number that uniquely
    // identifies a bank customer. This field will be used if the customer is
    // identified based on a unique resident identifier (like Aadhaar) or based
    // on the customer's mobile number.
    CustomerReference customer_reference = 1;
    // A reference to uniquely identify a customer's bank account based on
    // India's UPI standards.
    AccountReference account_reference = 2;
  }
  // Information about a customer's debit card that will be provided if the
  // issuer bank supports the ATM_REDIRECT mode of registration.
  DebitCardInfo debit_card_info = 3;
  // Participant initiating the registration.
  Participant participant = 4;
}

// Request for a previously initiated registration to be validated.
message ValidateRegistrationRequest {
  // Identifies the customer or bank account whose registration for UPI is to be
  // validated. Either a customer reference or a bank account reference will be
  // provided. Only one of the two will be specified.
  oneof reference {
    // The combination of a reference type and reference number that uniquely
    // identifies a bank customer. This field will be used if the customer is
    // identified based on a unique resident identifier (like Aadhaar) or based
    // on the customer's mobile number.
    CustomerReference customer_reference = 1;
    // A reference to uniquely identify a customer's bank account based on
    // India's UPI standards.
    AccountReference account_reference = 2;
  }
  // Information about a customer's debit card that needs to be validated by the
  // bank.
  DebitCardInfo debit_card_info = 3;
  // The ATM pin for the debit card that needs to be validated by the bank.
  string atm_pin = 4;
  // The OTP received on the customer's mobile phone that needs to be validated
  // by the bank.
  string otp = 5;
  // Participant validating the registration.
  Participant participant = 6;
}

// Request for validating customer against a government issued ID.
message CustomerValidationRequest {
  // Details of the ID that needs to be validated.
  CustomerValidationId id = 1;
  // Unique identification of an account according to India's UPI standards.
  AccountReference ref = 2;
}

// Response for the customer validation against a government ID.
message CustomerValidationResponse {
  // Types of account nature.
  enum AccountNature {
    // Unspecified account nature.
    ACCOUNT_NATURE_UNDEFINED = 0;
    // Acount nature is of type SINGLE.
    SINGLE = 1;
    // Account nature is of type JOINT.
    JOINT = 2;
  }

  // Types of account holder.
  enum AccountHolder {
    // Unspecified account holder.
    ACCOUNT_HOLDER_UNDEFINED = 0;
    // Customer is primary account holder.
    PRIMARY = 1;
    // Customer is secondary account holder.
    SECONDARY = 2;
  }

  // TRUE if the ID provided in the request is valid, FALSE otherwise.
  bool valid = 1;
  // Nature of the account i.e. SINGLE/JOINT.
  AccountNature account_nature = 2;
  // Denotes whether the customer is a PRIMARY or SECONDARY account holder.
  AccountHolder account_holder = 3;
  // Denotes whether the account type is SAVINGS, CURRENT etc.
  string account_type = 4;
  // Mask Name of the customer with the bank.
  string mask_name = 5;
  // Denotes whether Customer is a PERSON or ENTITY.
  Persona customer_type = 6;
  // Merchant Category code as specified by UPI (A four-digit number listed in
  // ISO 18245 for retail financial services).
  string category_code = 7;
}