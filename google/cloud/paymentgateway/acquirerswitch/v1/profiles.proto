// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.cloud.paymentgateway.acquirerswitch.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/cloud/paymentgateway/acquirerswitch/v1/common_fields.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/type/phone_number.proto";

option csharp_namespace = "Google.Cloud.PaymentGateway.AcquirerSwitch.V1";
option go_package = "cloud.google.com/go/paymentgateway/acquirerswitch/apiv1/acquirerswitchpb;acquirerswitchpb";
option java_multiple_files = true;
option java_outer_classname = "ProfilesProto";
option java_package = "com.google.cloud.paymentgateway.acquirerswitch.v1";
option php_namespace = "Google\\Cloud\\PaymentGateway\\AcquirerSwitch\\V1";
option ruby_package = "Google::Cloud::PaymentGateway::AcquirerSwitch::V1";

// This service provides methods for the creation and validation of profiles.
service PersonSwitchProfiles {
  option (google.api.default_host) = "acquirerswitch.googleapis.com";
  option (google.api.oauth_scopes) =
      "https://www.googleapis.com/auth/cloud-platform";

  // Creates a profile with the specified set of profile identifiers. This
  // method will return an error if an active profile with specified instance
  // ID exists in the person switch.
  //
  // There are three possible flows that are supported for profile
  // verification:
  //
  // 1. If the client invoking this API is configured (in the person switch
  // instance) to manage its own verification mechanisms then, upon successful
  // validation of all input parameters, the profile will be created in an
  // `ACTIVE` state and will be immediately usable for further API calls.
  // 2. If the client invoking this API is configured (in the person switch
  // instance) to manage the outgoing SMS process by itself, then the client is
  // expected to provide the SMS content sent from the device in the request to
  // this API. Upon successful validation of all input parameters, the profile
  // will be created with state set to `CREATING`. The profile will become
  // `ACTIVE` once the SMS provider invokes the
  // [VerifyProfile][google.cloud.paymentgateway.acquirerswitch.v1.PersonSwitchProfiles.VerifyProfile]
  // method with the same SMS content as provided in the request to this method.
  // 3. If the client invoking this API is configured (in the person switch
  // instance) to have the person switch manage the verification mechanism,
  // then, upon successful validation of input parameters, the profile will be
  // created in a `CREATING` state. The response will contain the new profile
  // with the
  // [outgoing_sms_details][google.cloud.paymentgateway.acquirerswitch.v1.Profile.outgoing_sms_details]
  // field populated. Callers must follow the outgoing SMS flows to verify the
  // profile. Post verification, the profile's state will be set to `ACTIVE`.
  rpc CreateProfile(CreateProfileRequest) returns (Profile) {
    option (google.api.http) = {
      post: "/v1/{parent=projects/*/clients/*/apps/*}/profiles"
      body: "profile"
    };
    option (google.api.method_signature) = "parent,profile";
  }

  // Get the profile with the given name.
  rpc GetProfile(GetProfileRequest) returns (Profile) {
    option (google.api.http) = {
      get: "/v1/{name=projects/*/clients/*/apps/*/profiles/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // Check the profile with the given identifiers.
  //
  // * If the profile with the given identifiers is in
  // [ACTIVE][google.cloud.paymentgateway.acquirerswitch.v1.Profile.State.ACTIVE],
  // then this method returns a successful response with the complete Profile.
  // * If the profile with the given identifiers is in any
  // [state][google.cloud.paymentgateway.acquirerswitch.v1.Profile.State] other
  // than `ACTIVE`, then this method returns an error with the following
  // values set in the [Status][google.rpc.Status] message:
  //     1. [code][google.rpc.Status.code] -
  //     [FAILED_PRECONDITION][google.rpc.Code.FAILED_PRECONDITION]
  //     2. [message][google.rpc.Status.message] - A developer facing error
  //     message indicating the failed precondition check on the profile.
  //     3. [details][google.rpc.Status.details] - This will contain a single
  //     value which will be of type [ErrorInfo][google.rpc.ErrorInfo].
  //         1. [ErrorInfo.reason][google.rpc.ErrorInfo.reason] - This will be
  //         one of the [profile
  //         state][google.cloud.paymentgateway.acquirerswitch.v1.Profile.State]
  //         values other than `STATE_ACTIVE`.
  //         2. [ErrorInfo.domain][google.rpc.ErrorInfo.domain] - This will be
  //         set to `acquirerswitch.googleapis.com`.
  rpc CheckProfile(CheckProfileRequest) returns (Profile) {
    option (google.api.http) = {
      post: "/v1/{parent=projects/*/clients/*/apps/*}/profiles:check"
      body: "*"
    };
    option (google.api.method_signature) = "parent";
  }

  // Reclaim any payment addresses for a profile. This method can only be
  // invoked on a profile whose state is
  // [STATE_ACTIVE][google.cloud.paymentgateway.acquirerswitch.v1.Profile.State.STATE_ACTIVE].
  //
  // If there are any inactive profiles with the same phone number as the
  // profile on which this method is invoked, then any payment addresses (and
  // their registered accounts) associated with the most recently inactivated
  // profile with the same phone number will get associated with the current
  // profile.
  //
  // If the profile already has any active payment addresses associated with it,
  // then no payment addresses will be reclaimed.
  rpc ReclaimPaymentAddresses(ReclaimPaymentAddressesRequest)
      returns (Profile) {
    option (google.api.http) = {
      post: "/v1/{profile=projects/*/clients/*/apps/*/profiles/*}:reclaimPaymentAddresses"
      body: "*"
    };
  }

  // Update a profile. The following values can be updated in a profile.
  //
  // 1. `id_set.device_id`
  // 2. `id_set.phone_number`
  // 3. `state`
  // 4. `display_name`
  //
  // The
  // [update_mask][google.cloud.paymentgateway.acquirerswitch.v1.UpdateProfileRequest.update_mask]
  // should indicate which of the four udpatable fields are being updated by the
  // request. Note that this API allows only one field to be updated at a time.
  // Specifying more than one value in the `update_mask` field, or if the mask
  // contains the path to a field other than the ones defined as updatable
  // above, then this method will raise an error.
  //
  // The following cases describe the behaviour of this method.
  //
  // 1. Updating the
  // [id_set.device_id][google.cloud.paymentgateway.acquirerswitch.v1.Profile.id_set]
  // value sets the newly provided value in the profile. No further validations
  // are performed.
  // 2. Updating the
  // [id_set.phone_number][google.cloud.paymentgateway.acquirerswitch.v1.Profile.id_set]
  // will trigger the following changes:
  //      1. The profile's state is updated to
  //         [UPDATING][google.cloud.paymentgateway.acquirerswitch.v1.Profile.State.UPDATING]
  //      2. The response from this method contains the
  //         [outgoing_sms_details][google.cloud.paymentgateway.acquirerswitch.v1.Profile.outgoing_sms_details]
  //         requiring callers to trigger the outgoing SMS flow and validate the
  //         updated phone number.
  // 3. The [state][google.cloud.paymentgateway.acquirerswitch.v1.Profile.state]
  // can be updated only if the current state of the profile is either `ACTIVE`,
  // or `BLOCKED`. An `ACTIVE` profile can be made `BLOCKED`, or vice versa.
  // Updates to any other state will cause the method to fail with an error.
  // 4. The
  // [display_name][google.cloud.paymentgateway.acquirerswitch.v1.Profile.display_name]
  // of the profile can be updated to any non-nil value.
  rpc UpdateProfile(UpdateProfileRequest) returns (Profile) {
    option (google.api.http) = {
      patch: "/v1/{profile.name=projects/*/clients/*/apps/*/profiles/*}"
      body: "profile"
    };
    option (google.api.method_signature) = "profile,update_mask";
  }

  // Verify a profile by providing the content of the encrypted SMS content
  // received by the SMS provider from a device for which a profile is being
  // created/updated.
  //
  // This API is specifically meant for being called by SMS providers and not by
  // app services.
  rpc VerifyProfile(VerifyProfileRequest) returns (VerifyProfileResponse) {
    option (google.api.http) = {
      post: "/v1/{parent=projects/*}/profiles:verify"
      body: "*"
    };
    option (google.api.method_signature) = "parent";
  }
}

// The
// [CreateProfile][google.cloud.paymentgateway.acquirerswitch.v1.PersonSwitchProfiles.CreateProfile]
// method's request.
message CreateProfileRequest {
  // Required. The parent resource for profiles.
  //
  // Format: `projects/{project}/clients/{client}/apps/{app}`
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "acquirerswitch.googleapis.com/ThirdPartyAppProvider"
    }
  ];

  // Required. The profile to be created. The
  // [display_name][google.cloud.paymentgateway.acquirerswitch.v1.Profile.display_name]
  // and
  // [profile_id_set][google.cloud.paymentgateway.acquirerswitch.v1.Profile.id_set]
  // are the only fields that are used during profile creation.
  Profile profile = 2 [(google.api.field_behavior) = REQUIRED];

  // This field must be specified if the client invoking the `CreateProfile` API
  // will manage the outgoing SMS processing, and will create the profile in the
  // person switch after the outgoing SMS has been triggered from the device.
  // The content of the SMS that the SMS provider will use in the
  // `VerifyProfile` call must be specified in this field.
  string sms_content = 3;
}

// The
// [GetProfile][google.cloud.paymentgateway.acquirerswitch.v1.PersonSwitchProfiles.GetProfile]
// method's request.
message GetProfileRequest {
  // Required. The name of the profile.
  //
  // Format: `projects/{project}/clients/{client}/apps/{app}/profiles/{profile}`
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "acquirerswitch.googleapis.com/Profile"
    }
  ];
}

// The
// [CheckProfile][google.cloud.paymentgateway.acquirerswitch.v1.PersonSwitchProfiles.CheckProfile]
// method's request.
message CheckProfileRequest {
  // Required. The parent resource for profiles.
  //
  // Format: `projects/{project}/clients/{client}/apps/{app}`
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "acquirerswitch.googleapis.com/ThirdPartyAppProvider"
    }
  ];

  // The profile identifiers. If the phone number is specified in the request,
  // then it will be validated against the phone number associated with the
  // profile identifed by the device id and instance id.
  repeated ProfileIdSet profile_id_sets = 2;

  // Detailed information about the device initiating the request.
  DeviceDetails device_details = 3;
}

// The
// [UpdateProfile][google.cloud.paymentgateway.acquirerswitch.v1.PersonSwitchProfiles.UpdateProfile]
// method's request.
message UpdateProfileRequest {
  // Required. The profile to be updated.
  Profile profile = 1 [(google.api.field_behavior) = REQUIRED];

  // Required. The list of fields to update
  google.protobuf.FieldMask update_mask = 2
      [(google.api.field_behavior) = REQUIRED];
}

// The
// [VerifyProfile][google.cloud.paymentgateway.acquirerswitch.v1.PersonSwitchProfiles.VerifyProfile]
// method's request.
message VerifyProfileRequest {
  // The parent resource for profile validations.
  //
  // Format: `projects/{project}`
  string parent = 1;

  // The phone number which *sent* the SMS. This is used to identify the phone
  // number of the device that is attempting the creation (registration).
  google.type.PhoneNumber sms_source = 2;

  // The phone number which *received* the SMS. This is used to identify the
  // app which is attempting the registration.
  google.type.PhoneNumber sms_destination = 3;

  // The SMS content received by the SMS provider.
  string content = 4;

  // The timestamp at which the SMS was received by the provider.
  google.protobuf.Timestamp received_time = 5;
}

// The
// [VerifyProfile][google.cloud.paymentgateway.acquirerswitch.v1.PersonSwitchProfiles.VerifyProfile]
// method's response.
message VerifyProfileResponse {}

// The
// [ReclaimPaymentAddresses][google.cloud.paymentgateway.acquirerswitch.v1.PersonSwitchProfiles.ReclaimPaymentAddresses]
// method's request
message ReclaimPaymentAddressesRequest {
  // The name of the profile.
  //
  // Format: `projects/{project}/clients/{client}/apps/{app}/profiles/{profile}`
  string profile = 1;
}
