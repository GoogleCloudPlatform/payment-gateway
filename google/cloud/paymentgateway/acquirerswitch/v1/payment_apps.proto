// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.cloud.paymentgateway.acquirerswitch.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";

option csharp_namespace = "Google.Cloud.PaymentGateway.AcquirerSwitch.V1";
option go_package = "cloud.google.com/go/paymentgateway/acquirerswitch/apiv1/acquirerswitchpb;acquirerswitchpb";
option java_multiple_files = true;
option java_outer_classname = "PaymentAppProvidersProto";
option java_package = "com.google.cloud.paymentgateway.acquirerswitch.v1";
option php_namespace = "Google\\Cloud\\PaymentGateway\\AcquirerSwitch\\V1";
option ruby_package = "Google::Cloud::PaymentGateway::AcquirerSwitch::V1";

// This service provides methods for the management of payment application
// providers that are clients of the person switch.
service PersonSwitchPaymentAppProviders {
  option (google.api.default_host) = "acquirerswitch.googleapis.com";
  option (google.api.oauth_scopes) =
      "https://www.googleapis.com/auth/cloud-platform";

  // List all the payment application providers that are clients of the
  // person switch.
  rpc ListPaymentAppProviders(ListPaymentAppProvidersRequest)
      returns (ListPaymentAppProvidersResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=projects/*}/paymentAppProviders"
    };
    option (google.api.method_signature) = "parent";
  }
}

// The
// [ListPaymentAppProviders][google.cloud.paymentgateway.acquirerswitch.v1.PersonSwitchPaymentAppProviders.ListPaymentAppProviders]
// method's request.
message ListPaymentAppProvidersRequest {
  // Required. The parent resource for all payment application providers.
  //
  // Format:
  // `projects/{project}`
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      child_type: "acquirerswitch.googleapis.com/PaymentAppProvider"
    }
  ];

  // The maximum number of payment application providers to return. The service
  // may return fewer than this value. If unspecified or if the specified value
  // is less than 1, at most 50 transactions will be returned. The maximum value
  // is 1000; values above 1000 will be coerced to 1000. While paginating, you
  // can specify a new page size parameter for each page of values to be listed.
  int32 page_size = 2;

  // A page token, received from a previous `ListPaymentAppProviders` call.
  // Specify this parameter to retrieve the next page of payment application
  // providers.
  string page_token = 3;
}

// The
// [ListPaymentAppProviders][google.cloud.paymentgateway.acquirerswitch.v1.PersonSwitchPaymentAppProviders.ListPaymentAppProviders]
// method's response.
message ListPaymentAppProvidersResponse {
  // The list of payment application providers which are clients of the
  // person switch.
  repeated PaymentAppProvider payment_app_providers = 1;

  // Pass this token in the ListPaymentAppProvidersRequest to continue to
  // list results. If all results have been returned, this field is an empty
  // string or not present in the response.
  string next_page_token = 2;
}

// A payment application provider that is registered with the person switch
// and is a client of the service.
message PaymentAppProvider {
  option (google.api.resource) = {
    type: "acquirerswitch.googleapis.com/PaymentAppProvider"
    pattern: "projects/{project}/clients/{client}/apps/{app}"
  };

  // The name of the payment application provider. This uniquely identifies
  // the payment application provider in the system.
  //
  // Format: `projects/{project}/clients/{client}/apps/{app}`
  string name = 1;

  // The user-friendly display name of the payment application provider. The
  // maximum length of this field is 255 characters.
  string display_name = 3;

  // Details of the payment application specific to a particular payment
  // channel.
  oneof payment_channel_details {
    // Provides details of the payment application provider in the UPI
    // ecosystem.
    UpiPaymentAppProvider upi_payment_app_provider = 4;
  }
}

// Details about a payment application provider that are specific to the UPI
// payment system.
message UpiPaymentAppProvider {
  // The UPI org id of the payment application provider. This is an
  // alpha-numeric value between 1 and 20 characters long.
  string org_id = 1;

  // The handle used for payment addresses (VPA).
  string payment_address_handle = 2;
}

