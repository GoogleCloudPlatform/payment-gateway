// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.cloud.paymentgateway.acquirerswitch.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/cloud/paymentgateway/acquirerswitch/v1/common_fields.proto";
import "google/longrunning/operations.proto";
import "google/type/date.proto";

option csharp_namespace = "Google.Cloud.PaymentGateway.AcquirerSwitch.V1";
option go_package = "cloud.google.com/go/paymentgateway/acquirerswitch/apiv1/acquirerswitchpb;acquirerswitchpb";
option java_multiple_files = true;
option java_outer_classname = "UtilitiesProto";
option java_package = "com.google.cloud.paymentgateway.acquirerswitch.v1";
option php_namespace = "Google\\Cloud\\PaymentGateway\\AcquirerSwitch\\V1";
option ruby_package = "Google::Cloud::PaymentGateway::AcquirerSwitch::V1";

// This service provides utility functions for use by clients of the person
// switch.
service PersonSwitchUtilities {
  option (google.api.default_host) = "acquirerswitch.googleapis.com";
  option (google.api.oauth_scopes) =
      "https://www.googleapis.com/auth/cloud-platform";

  // List all account providers that can be used with the person switch. In UPI,
  // this method returns the list of account providers as provided by the
  // UPI payments orchestrator. The list of account providers is cached by the
  // person switch and refreshed from UPI on a periodic basis.
  rpc ListAccountProviders(ListAccountProvidersRequest)
      returns (ListAccountProvidersResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=projects/*}/accountProviders"
    };
    option (google.api.method_signature) = "parent";
  }

  // List all payment service providers operating in the payments ecosystem.
  // In UPI, this method returns the list of payment service providers as
  // provided by the UPI payments orchestrator. The list of payment service
  // providers is cached by the person switch and refreshed from UPI on a
  // periodic basis.
  rpc ListPaymentServiceProviders(ListPaymentServiceProvidersRequest)
      returns (ListPaymentServiceProvidersResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=projects/*}/paymentServiceProviders"
    };
    option (google.api.method_signature) = "parent";
  }

  // Get all public keys of payment system operators. The
  // keyset identifier in the request should be one of the following values:
  //
  // * `UPI`
  // * `UPI_LITE`
  //
  // Examples:
  //
  // * `/v1/projects/examples-project-1/paymentOperatorKeysets/UPI`
  // * `/v1/projects/examples-project-1/paymentOperatorKeysets/UPI_LITE`
  //
  // In UPI, this method returns the list of public keys as provided by the
  // UPI payments operator. The list is cached by the person switch and
  // refreshed from UPI on a periodic basis.
  rpc GetPaymentOperatorsKeyset(GetPaymentOperatorsKeysetRequest)
      returns (PaymentOperatorsKeyset) {
    option (google.api.http) = {
      get: "/v1/{name=projects/*/paymentOperatorsKeysets/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // Search, based on certain filter criteria, and return all key resources
  // which match the given criteria.
  //
  // The following filter criteria are supported:
  //
  // * `key_code` - The code of the key to be searched. In UPI, this will be
  // the payment service provider org ID of the key to be searched.
  //
  // The returned list of key resources will either be empty (if no
  // key code value matches the filter criteria) or contain exactly one
  // resource matching the specified filter criteria.
  //
  // **Note** - Use this method to search for payment service provider keys
  // registered with the payments orchestrator.
  //
  // The method returns an [Operation][google.longrunning.Operation], with the
  // response returned in an
  // [Event][google.cloud.paymentgateway.acquirerswitch.v1.Event]. The event
  // notification will contain a
  // [SearchPaymentServiceProviderKeysResponse][google.cloud.paymentgateway.acquirerswitch.v1.SearchPaymentServiceProviderKeysResponse]
  // in the
  // [response][google.cloud.paymentgateway.acquirerswitch.v1.Event.response]
  // field of the payload.
  rpc SearchPaymentServiceProviderKeys(SearchPaymentServiceProviderKeysRequest)
      returns (SearchPaymentServiceProviderKeysResponse) {
    option (google.api.http) = {
      post: "/v1/{parent=projects/*}/paymentServiceProviderKeys:search"
      body: "*"
    };
    option (google.api.method_signature) = "parent";
  }

  // Fetch the token of a particular type from the payments orchestrator.
  // This token is used by the client apps during registration with the
  // common library.
  //
  // The method returns an [Operation][google.longrunning.Operation], with the
  // response returned in an
  // [Event][google.cloud.paymentgateway.acquirerswitch.v1.Event]. The event
  // notification will contain a
  // [FetchTokenResponse][google.cloud.paymentgateway.acquirerswitch.v1.FetchTokenResponse]
  // in the
  // [response][google.cloud.paymentgateway.acquirerswitch.v1.Event.response]
  // field of the payload.
  //
  // Note: Although this is similar to *Get*" request, it is modelled as a
  // custom method because the resource needs to be fetched from the payments
  // orchestrator. It accepts a challenge which is PII and hence the method is
  // modelled as a HTTP POST.
  rpc FetchToken(FetchTokenRequest) returns (google.longrunning.Operation) {
    option (google.api.http) = {
      post: "/v1/{parent=projects/*/clients/*/apps/*}/tokens:fetch"
      body: "*"
    };
    option (google.api.method_signature) = "parent,type,credential";
    option (google.longrunning.operation_info) = {
      response_type: "FetchTokenResponse"
      metadata_type: "FetchTokenMetadata"
    };
  }
}

// The
// [ListAccountProviders][google.cloud.paymentgateway.acquirerswitch.v1.PersonSwitchUtilities.ListAccountProviders]
// method's request.
message ListAccountProvidersRequest {
  // Required. The parent resource for all the account providers.
  //
  // Format:
  // `projects/{project}`
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      child_type: "acquirerswitch.googleapis.com/AccountProvider"
    }
  ];

  // The maximum number of account providers to return. The service may return
  // fewer than this value. If unspecified or if the specified value is less
  // than 500, at most 500 account providers will be returned. The maximum
  // value is also 500; values above 500 will be coerced to 500. While
  // paginating, you can specify a new page size parameter for each page of
  // account providers to be listed.
  int32 page_size = 2;

  // A page token, received from a previous `ListAccountProviders` call.
  // Specify this parameter to retrieve the next page of account providers.
  string page_token = 3;
}

// The
// [ListAccountProviders][google.cloud.paymentgateway.acquirerswitch.v1.PersonSwitchUtilities.ListAccountProviders]
// method's response.
message ListAccountProvidersResponse {
  // The list of account providers which clients of the person switch can use to
  // onboard payment accounts.
  repeated AccountProvider account_providers = 1;

  // Pass this token in the `ListAccountProvidersRequest` to continue to list
  // results. If all results have been returned, this field is an empty string
  // or not present in the response.
  string next_page_token = 2;
}

// The
// [ListPaymentServiceProviders][google.cloud.paymentgateway.acquirerswitch.v1.PersonSwitchUtilities.ListPaymentServiceProviders]
// method's request.
message ListPaymentServiceProvidersRequest {
  // Required. The parent resource for all the payment service providers.
  //
  // Format:
  // `projects/{project}`
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      child_type: "acquirerswitch.googleapis.com/PaymentServiceProvider"
    }
  ];

  // The maximum number of payment service providers to return. The service may
  // return fewer than this value. If unspecified or if the specified value is
  // less than 500, at most 500 payment service providers will be returned.
  // The maximum value is also 500; values above 500 will be coerced to 500.
  // While paginating, you can specify a new page size parameter for each page
  // of payment service providers to be listed.
  int32 page_size = 2;

  // A page token, received from a previous `ListPaymentServiceProviders` call.
  // Specify this parameter to retrieve the next page of payment service
  // providers.
  string page_token = 3;
}

// The
// [ListPaymentServiceProviders][google.cloud.paymentgateway.acquirerswitch.v1.PersonSwitchUtilities.ListPaymentServiceProviders]
// method's response.
message ListPaymentServiceProvidersResponse {
  // The list of payment service  providers.
  repeated PaymentServiceProvider payment_service_providers = 1;

  // Pass this token in the `ListPaymentServiceProvidersRequest` to continue to
  // list results. If all results have been returned, this field is an empty
  // string or not present in the response.
  string next_page_token = 2;
}

// The
// [GetPaymentOperatorsKeyset][google.cloud.paymentgateway.acquirerswitch.v1.PersonSwitchUtilities.GetPaymentOperatorsKeyset]
// method's request.
message GetPaymentOperatorsKeysetRequest {
  // Required. The name of the payment operators key set resource.
  //
  // Format:
  // `projects/{project}/paymentOperatorsKeySets/{paymentOperatorKeySet}`
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "acquirerswitch.googleapis.com/PaymentOperatorsKeyset"
    }
  ];
}

// The
// [SearchPaymentServiceProviderKeys][google.cloud.paymentgateway.acquirerswitch.v1.PersonSwitchUtilities.SearchPaymentServiceProviderKeys]
// method's request.
message SearchPaymentServiceProviderKeysRequest {
  // Required. The parent of all keys in whose context the keys are to be
  // searched.
  //
  // Format:
  // `projects/{project}`
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      child_type: "acquirerswitch.googleapis.com/Key"
    }
  ];

  // Results are filtered based on the provided value.
  oneof filter {
    // The code of the key to be searched. In UPI, this will be the
    // payment service provider org ID of the key to be searched.
    string key_code = 2;
  }

  // The maximum number of keys to return. The service may return fewer than
  // this value. If unspecified or if the specified value is less than 500,
  // at most 500 keys will be returned. The maximum value is also 500;
  // values above 500 will be coerced to 500.
  // While paginating, you can specify a new page size parameter for each page
  // of keys to be listed.
  int32 page_size = 3;

  // A page token, received from a previous
  // `SearchPaymentServiceProviderKeysRequest` call. Specify this parameter to
  // retrieve the next page of keys
  string page_token = 4;
}

// The
// [SearchPaymentServiceProviderKeys][google.cloud.paymentgateway.acquirerswitch.v1.PersonSwitchUtilities.SearchPaymentServiceProviderKeys]
// method's response.
message SearchPaymentServiceProviderKeysResponse {
  // The payment service provider keys matching the specified filter criteria.
  repeated PaymentServiceProviderKey keys = 1;

  // A token that can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

// The
// [FetchToken][google.cloud.paymentgateway.acquirerswitch.v1.PersonSwitchUtilities.FetchToken]
// method's request.
message FetchTokenRequest {
  // Enumeration of possible types of the tokens which can be fetched from the
  // payments orchestrator.
  enum TokenType {
    // Type unspecified.
    TYPE_UNSPECIFIED = 0;

    // Represents `GetToken` type.
    UPI_TOKEN = 1;

    // Represents `GetLite` type.
    UPI_LITE_TOKEN = 2;
  }

  // Required. The app which is triggering the token fetch request.
  //
  // Format:
  // `projects/{project}/clients/{client}/apps/{app}`
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "acquirerswitch.googleapis.com/ThirdPartyAppProvider"
    }
  ];

  // Required. The type of the token to be fetched.
  TokenType type = 2 [(google.api.field_behavior) = REQUIRED];

  // Required. The credential to authenticate the end-user invoking the API.
  TokenCredentials credential = 3 [(google.api.field_behavior) = REQUIRED];

  // Metadata about the request.
  Metadata metadata = 4;
}

// The
// [FetchToken][google.cloud.paymentgateway.acquirerswitch.v1.PersonSwitchUtilities.FetchToken]
// method's metadata.
message FetchTokenMetadata {
  // A unique id for the invocation of the method.
  string invocation_id = 1;

  // Common metadata about the long running operation.
  OperationMetadata common_metadata = 2;
}

// The
// [FetchToken][google.cloud.paymentgateway.acquirerswitch.v1.PersonSwitchUtilities.FetchToken]
// method's response. This is returned in the
// [response][google.longrunning.Operation.response] field of the
// [Operation][google.longrunning.Operation] object returned in the
// [Event][google.cloud.paymentgateway.acquirerswitch.v1.Event] notification
// payload.
message FetchTokenResponse {
  // The token provided by the payments orchestrator.
  Token token = 1;
}

// Represents the list of public keys provided by the UPI payments operator.
message PaymentOperatorsKeyset {
  option (google.api.resource) = {
    type: "acquirerswitch.googleapis.com/PaymentServiceOperatorsKeyset"
    pattern: "projects/{project}/paymentServiceOperatorsKeysets/{payment_service_operators_keyset}"
  };

  // Output only. The name of the payment operators key set resource.
  //
  // Format:
  // `projects/{project}/paymentOperatorKeySets/{paymentOperatorKeySet}`
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Output only. The signed XML response as received from the payments
  // operator.
  string xml_payload = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// Represents a UPI version that an account provider or payment service provider
// supports.
message UpiVersion {
  // The version number.
  string number = 1;

  // A description of the version as provided by the payments orchestrator.
  string description = 2;

  // Flag indicating if the version is to be mandatorily supported or not.
  bool mandatory = 3;
}

// Represents an account provider in the payments system. The provider supports
// listing of accounts, registration of accounts into the payment system, and
// payment operations on the account.
message AccountProvider {
  option (google.api.resource) = {
    type: "acquirerswitch.googleapis.com/AccountProvider"
    pattern: "projects/{project}/accountProviders/{account_provider}"
  };

  // Details of an account provider in the UPI system.
  message UpiAccountProvider {
    // Enumeration of possible registration formats supported by an account
    // provider. Check the UPI specification for an explanation of each
    // registration format.
    enum RegistrationFormat {
      // Registration format unspecified.
      REGISTRATION_FORMAT_UNSPECIFIED = 0;

      // Registration format FORMAT1 as defined by the payments orchestrator.
      REGISTRATION_FORMAT_1 = 1;

      // Registration format FORMAT2 as defined by the payments orchestrator.
      REGISTRATION_FORMAT_2 = 2;

      // Registration format FORMAT3 as defined by the payments orchestrator.
      REGISTRATION_FORMAT_3 = 3;
    }

    // The Indian Financial System Code (IFSC) of the account provider.
    string ifsc = 1;

    // The Issuer Identification Number (IIN) of the account provider.
    string iin = 2;

    // The list of registration formats supported by the account provider.
    repeated RegistrationFormat registration_formats = 3;

    // The list of UPI versions supported by the account provider.
    repeated UpiVersion versions = 4;
  }

  // Name of the account provider.
  //
  // Format:
  // projects/{project}/accountProviders/{account_provider}
  string name = 1;

  // Display name of the account provider.
  string display_name = 2;

  // Flag indicating if the account provider is actively participating in the
  // payments ecosystem or not.
  bool active = 3;

  // Details of the account provider which will vary based on the type of
  // payments supported by the account provider.
  oneof details {
    // The UPI account provider details.
    UpiAccountProvider upi_account_provider = 5;
  }
}

// Represents a payment service provider in the payments system.
message PaymentServiceProvider {
  option (google.api.resource) = {
    type: "acquirerswitch.googleapis.com/PaymentServiceProvider"
    pattern: "projects/{project}/paymentServiceProviders/{payment_service_provider}"
  };

  // Details of a payment service provider in the UPI system.
  message UpiPaymentServiceProvider {
    // The list of handles supported by the payment service provider. This
    // refers to the tokens after the `@` in a payment address.
    repeated string handles = 1;

    // The list of UPI versions supported by the payment service provider.
    repeated UpiVersion versions = 2;
  }

  // Name of the payment service provider.
  //
  // Format:
  // projects/{project}/paymentServiceProviders/{payment_service_provider}
  string name = 1;

  // Display name of the payment service provider.
  string display_name = 2;

  // Flag indicating if the payment service provider is actively participating
  // in the payments ecosystem or not.
  bool active = 3;

  // Details of the payment service provider which will vary based on the type
  // of payments supported by the payment service provider.
  oneof details {
    // The UPI payment service provider details.
    UpiPaymentServiceProvider upi_payment_service_provider = 5;
  }
}

// Represents a key in the payments system.
message PaymentServiceProviderKey {
  option (google.api.resource) = {
    type: "acquirerswitch.googleapis.com/PaymentServiceProviderKey"
    pattern: "projects/{project}/paymentServiceProviderKeys/{payment_service_provider_key}"
  };

  // Name of the key.
  //
  // Format:
  // projects/{project}/keys/{key}
  string name = 1;

  // Code of the account provider.
  string code = 2;

  // Type of the key.
  string type = 3;

  // Key index date.
  google.type.Date index_date = 4;

  // Base64 encoded certificate.
  bytes value = 5;
}

// Represents a token in the payments system.
message Token {
  // Code of the account provider.
  string code = 1;

  // Type of the tken.
  string type = 2;

  // Token index date.
  google.type.Date index_date = 3;

  // Base64 encoded token.
  bytes value = 4;
}

// UPI Credentials for fetching the token from the payments orchestrator.
message UpiTokenCredentials {
  // Enumeration of credentials types.
  enum CredentialType {
    // Credential type unspecified.
    CREDENTIAL_TYPE_UNSPECIFIED = 0;

    // Credential type is `challenge`.
    CHALLENGE = 1;

    // Credentials type is `device`.
    DEVICE = 2;
  }

  // Enumeration of credentials subtypes.
  enum CredentialSubtype {
    // Credential subtype unspecified.
    CREDENTIAL_SUBTYPE_UNSPECIFIED = 0;

    // Credential subtype is `initial`.
    INITIAL = 1;

    // Credentials subtype is `reset`.
    RESET = 2;

    // Credentials subtype is `rotate`.
    ROTATE = 3;
  }

  // Type of the credentials.
  CredentialType type = 1;

  // Subtype of the credentials.
  CredentialSubtype subtype = 2;

  // The common library generated challenge.
  string challenge = 3;
}

// Credentials for fetching the token from the payments orchestrator.
// This token is needed by the client apps while registering with the common
// library.
message TokenCredentials {
  // The credentials.
  oneof credentials {
    // The token credentials needed in UPI.
    UpiTokenCredentials upi = 1;
  }
}

